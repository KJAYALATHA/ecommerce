{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer } from './reducers/userReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  producDetail: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  //userLogin is the name given to the initial state\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  } //userInfo is a name given in reducer\n\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/kjaya/Desktop/ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","reducer","productList","producDetail","cart","userLogin","userRegister","userDetail","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,2BAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA8CC,iBAA9C,QAAuE,wBAAvE;AAEA,MAAMC,OAAO,GAAGV,eAAe,CAAC;AAC5BW,EAAAA,WAAW,EAAGP,kBADc;AAE5BQ,EAAAA,YAAY,EAAGP,qBAFa;AAG5BQ,EAAAA,IAAI,EAACP,WAHuB;AAI5BQ,EAAAA,SAAS,EAACP,gBAJkB;AAIA;AAC5BQ,EAAAA,YAAY,EAAEP,mBALc;AAM5BQ,EAAAA,UAAU,EAAGP;AANe,CAAD,CAA/B;AAWA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAlC,GAA+E,EAA5G;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAlC,GAA+E,IAA3G;AAEA,MAAMI,YAAY,GAAG;AACjBV,EAAAA,IAAI,EAAC;AAACW,IAAAA,SAAS,EAACP;AAAX,GADY;AAEjBH,EAAAA,SAAS,EAAC;AAACW,IAAAA,QAAQ,EAACH;AAAV,GAFO,CAEwB;;AAFxB,CAArB;AAKA,MAAMI,UAAU,GAAG,CAACxB,KAAD,CAAnB;AAEA,MAAMyB,KAAK,GAAG5B,WAAW,CAACW,OAAD,EAASa,YAAT,EAAsBpB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAgBC,KAAhB","sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer,productDetailsReducer } from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer,userRegisterReducer,userDetailReducer } from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    producDetail : productDetailsReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer ,//userLogin is the name given to the initial state\r\n    userRegister :userRegisterReducer,\r\n    userDetail : userDetailReducer,\r\n\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItem')? JSON.parse(localStorage.getItem('cartItem')):[]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')? JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\nconst initialState = {\r\n    cart:{cartItems:cartItemsFromStorage},\r\n    userLogin:{userInfo:userInfoFromStorage} //userInfo is a name given in reducer\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default  store"]},"metadata":{},"sourceType":"module"}