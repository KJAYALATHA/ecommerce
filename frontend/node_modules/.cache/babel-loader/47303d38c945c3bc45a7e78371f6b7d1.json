{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from '../constants/orderConstants';\nimport axios from \"axios\";\nimport { CART_CLEAR_ITEM } from '../constants/cartConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    console.log(\"jayalatha this is from orderaction\");\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEM,\n      payload: data\n    });\n    localStorage.removeItem('cartItem');\n  } catch (error) {\n    console.log(\"catch the error this is from userAction\");\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kjaya/Desktop/ecommerce/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","axios","CART_CLEAR_ITEM","createOrder","order","dispatch","getState","console","log","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message"],"mappings":"AAAA,SAASA,oBAAT,EACIC,oBADJ,EAEIC,iBAFJ,QAGS,6BAHT;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAGA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AAEAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAIA,UAAM;AACJY,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFL,QAAQ,EAFZ,CAPE,CASc;;AAChB,UAAMM,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CACpB,kBADoB,EAErBb,KAFqB,EAGrBQ,MAHqB,CAAvB;AAMAP,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,oBADC;AAEPmB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAX,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP,eADC;AAEPgB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AAGD,GAlCD,CAkCE,OAAOC,KAAP,EAAc;AACdd,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AAEAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,iBADC;AAEPkB,MAAAA,OAAO,EACLG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CA9CI","sourcesContent":["import { ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL ,} \r\n    from '../constants/orderConstants'\r\nimport axios from \"axios\";\r\nimport { CART_CLEAR_ITEM } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      console.log(\"jayalatha this is from orderaction\");\r\n  \r\n      dispatch({\r\n        type: ORDER_CREATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState(); //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/orders/add/`,\r\n        order,\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: ORDER_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n      dispatch({\r\n        type: CART_CLEAR_ITEM,\r\n        payload: data,\r\n      });\r\n      localStorage.removeItem('cartItem')\r\n     \r\n     \r\n    } catch (error) {\r\n      console.log(\"catch the error this is from userAction\");\r\n  \r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}