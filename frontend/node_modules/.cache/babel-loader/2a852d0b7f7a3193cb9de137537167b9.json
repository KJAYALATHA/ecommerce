{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_DETAIL_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAIL_RESET } from \"../constants/userConstants\";\nimport axios from \"axios\";\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"COntent-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login/`, {\n      username: email,\n      password: password\n    }, config);\n    console.log(data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAIL_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register/\", {\n      name: name,\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetail = id => async (dispatch, getState) => {\n  try {\n    console.log(\"jayalatha this is from userAction\");\n    dispatch({\n      type: USER_DETAIL_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/profile/`, config);\n    dispatch({\n      type: USER_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch the error this is from userAction\");\n    dispatch({\n      type: USER_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    console.log(\"jayalatha this is from userAction\");\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(\"catch the error this is from userAction\");\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kjaya/Desktop/ecommerce/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_DETAIL_FAIL","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAIL_RESET","axios","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","username","console","log","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetail","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAIL_REQUEST,\r\n  USER_DETAIL_SUCCESS,\r\n  USER_DETAIL_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAIL_RESET,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"COntent-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/users/login/`,\r\n      {\r\n        username: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n    console.log(data);\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAIL_RESET });\r\n  dispatch({type:ORDER_LIST_MY_RESET})\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetail = (id) => async (dispatch, getState) => {\r\n  try {\r\n    console.log(\"jayalatha this is from userAction\");\r\n\r\n    dispatch({\r\n      type: USER_DETAIL_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState(); //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/users/profile/`,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAIL_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(\"catch the error this is from userAction\");\r\n\r\n    dispatch({\r\n      type: USER_DETAIL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    console.log(\"jayalatha this is from userAction\");\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState(); //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log(\"catch the error this is from userAction\");\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}