{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../constants/userConstants';\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'COntent-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login/`, {\n      'username': email,\n      'password': password\n    }, config);\n    console.log(data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'COntent-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/register/`, {\n      'username': email,\n      'password': password,\n      'name': name\n    }, config);\n    console.log(data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kjaya/Desktop/ecommerce/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","console","log","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name"],"mappings":"AAAA,SAASA,kBAAT,EACIC,kBADJ,EAEIC,eAFJ,EAGIC,WAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,kBANJ,QAM8B,4BAN9B;AAOI,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB,MAAOC,QAAP,IAAmB;AACxD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AAEA,UAAMa,MAAM,GAAE;AACVC,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ;AADC,KAAd;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAAY,mBAAZ,EAAgC;AACnD,kBAAWP,KADwC;AAEnD,kBAAWC;AAFwC,KAAhC,EAGrBG,MAHqB,CAAvB;AAIRI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEX,kBADD;AAELkB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIEK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAhC;AAEG,GArBD,CAsBA,OAAOS,KAAP,EAAc;AACVb,IAAAA,QAAQ,CACN;AAAEC,MAAAA,IAAI,EAAEV,eAAR;AAAwBiB,MAAAA,OAAO,EAC7BK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,MADxB,GAEIF,KAAK,CAACG;AAHZ,KADM,CAAR;AAOD;AACN,CAhCM;AAkCP,OAAO,MAAMC,MAAM,GAAG,MAAKjB,QAAD,IAAa;AACrCS,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAlB,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACT;AAAN,GAAD,CAAR;AACD,CAHM;AAMP,OAAO,MAAM2B,QAAQ,GAAG,CAACC,IAAD,EAAMtB,KAAN,EAAYC,QAAZ,KAAyB,MAAOC,QAAP,IAAmB;AAClE,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAMS,MAAM,GAAE;AACVC,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ;AADC,KAAd;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAAY,sBAAZ,EAAmC;AACtD,kBAAWP,KAD2C;AAEtD,kBAAWC,QAF2C;AAGtD,cAAOqB;AAH+C,KAAnC,EAIrBlB,MAJqB,CAAvB;AAKRI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,qBADD;AAELc,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIEK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAhC;AAEG,GAtBD,CAuBA,OAAOS,KAAP,EAAc;AACVb,IAAAA,QAAQ,CACN;AAAEC,MAAAA,IAAI,EAAEN,kBAAR;AAA2Ba,MAAAA,OAAO,EAChCK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,MADxB,GAEIF,KAAK,CAACG;AAHZ,KADM,CAAR;AAOD;AACN,CAjCQ","sourcesContent":["import { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT ,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,} from '../constants/userConstants'\r\n    import axios from \"axios\";\r\n\r\n    export const login = (email,password) => async (dispatch) =>{\r\n        try{\r\n            dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n            const config ={\r\n                headers :{\r\n                    'COntent-type' : 'application/json'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post(`/api/users/login/`, {\r\n                'username':email,\r\n                'password':password\r\n            },config);\r\n    console.log(data);\r\n\r\n    dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n      localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n        }\r\n        catch (error) {\r\n            dispatch(\r\n              { type: USER_LOGIN_FAIL,payload:\r\n                error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message, }\r\n             \r\n            );\r\n          }\r\n    }\r\n\r\n    export const logout = ()=>(dispatch) =>{\r\n      localStorage.removeItem('userInfo')\r\n      dispatch({type:USER_LOGOUT})\r\n    }\r\n\r\n\r\n    export const register = (name,email,password) => async (dispatch) =>{\r\n      try{\r\n          dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n          const config ={\r\n              headers :{\r\n                  'COntent-type' : 'application/json'\r\n              }\r\n          }\r\n\r\n          const { data } = await axios.post(`/api/users/register/`, {\r\n              'username':email,\r\n              'password':password,\r\n              'name':name\r\n          },config);\r\n  console.log(data);\r\n\r\n  dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n      }\r\n      catch (error) {\r\n          dispatch(\r\n            { type: USER_REGISTER_FAIL,payload:\r\n              error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message, }\r\n           \r\n          );\r\n        }\r\n  }"]},"metadata":{},"sourceType":"module"}