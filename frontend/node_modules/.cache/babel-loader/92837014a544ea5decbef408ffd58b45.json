{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  producDetail: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItem') ? JSON.parse(localStorage.getItem('cartItem')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/kjaya/Desktop/ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","producDetail","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,2BAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAGJ,kBADc;AAE5BK,EAAAA,YAAY,EAAGJ,qBAFa;AAG5BK,EAAAA,IAAI,EAACJ;AAHuB,CAAD,CAA/B;AAOA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAlC,GAA+E,EAA5G;AAEA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAC;AAACO,IAAAA,SAAS,EAACN;AAAX;AADY,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EAASS,YAAT,EAAsBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAgBC,KAAhB","sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer,productDetailsReducer } from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    producDetail : productDetailsReducer,\r\n    cart:cartReducer,\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItem')? JSON.parse(localStorage.getItem('cartItem')):[]\r\n\r\nconst initialState = {\r\n    cart:{cartItems:cartItemsFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default  store"]},"metadata":{},"sourceType":"module"}