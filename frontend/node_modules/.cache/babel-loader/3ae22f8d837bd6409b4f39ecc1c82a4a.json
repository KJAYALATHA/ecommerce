{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_DETAIL_FAIL } from '../constants/userConstants';\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'COntent-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login/`, {\n      'username': email,\n      'password': password\n    }, config);\n    console.log(data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetail = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAIL_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAIL_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kjaya/Desktop/ecommerce/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_DETAIL_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","console","log","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetail","id","getState","userLogin","userInfo","Authorization","token","get"],"mappings":"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","sourcesContent":["import { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT ,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAIL_REQUEST,\r\n    USER_DETAIL_SUCCESS,\r\n    USER_DETAIL_FAIL, } from '../constants/userConstants'\r\n    import axios from \"axios\";\r\n\r\n    export const login = (email,password) => async (dispatch) =>{\r\n        try{\r\n            dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n            const config ={\r\n                headers :{\r\n                    'COntent-type' : 'application/json'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post(`/api/users/login/`, {\r\n                'username':email,\r\n                'password':password\r\n            },config);\r\n    console.log(data);\r\n\r\n    dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n      localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n        }\r\n        catch (error) {\r\n            dispatch(\r\n              { type: USER_LOGIN_FAIL,payload:\r\n                error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message, }\r\n             \r\n            );\r\n          }\r\n    }\r\n\r\n    export const logout = ()=>(dispatch) =>{\r\n      localStorage.removeItem('userInfo')\r\n      dispatch({type:USER_LOGOUT})\r\n    }\r\n\r\n\r\n    export const register = (name, email, password) => async (dispatch) => {\r\n      try {\r\n          dispatch({\r\n              type: USER_REGISTER_REQUEST\r\n          })\r\n  \r\n          const config = {\r\n              headers: {\r\n                  'Content-type': 'application/json'\r\n              }\r\n          }\r\n  \r\n          const { data } = await axios.post(\r\n              '/api/users/register/',\r\n              { 'name': name, 'email': email, 'password': password },\r\n              config\r\n          )\r\n  \r\n          dispatch({\r\n              type: USER_REGISTER_SUCCESS,\r\n              payload: data\r\n          })\r\n  \r\n          dispatch({\r\n              type: USER_LOGIN_SUCCESS,\r\n              payload: data\r\n          })\r\n  \r\n          localStorage.setItem('userInfo', JSON.stringify(data))\r\n  \r\n      } catch (error) {\r\n          dispatch({\r\n              type: USER_REGISTER_FAIL,\r\n              payload: error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message,\r\n          })\r\n      }\r\n  }\r\n\r\n\r\n  export const getUserDetail =  (id) => async (dispatch,getState) =>{\r\n      try{\r\n\r\n        dispatch({\r\n            type: USER_DETAIL_REQUEST\r\n        })\r\n\r\n        const {userLogin : {userInfo},} = getState()   //this is for to get the token from loged in user because we kept the updateUserdetail as authendicated\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization :`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n    \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n      }\r\n      catch (error) {\r\n        dispatch({\r\n            type: USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}